#!/bin/sh
# Entrypoint script for php container.
#
# Ensures file permissions are setup correctly for cron, and
# starts the cron daemon and php.

# Ensure crontabs have expected owners and permissions.
# Done here to allow mounting the crontab as a volume within docker-compose.yml.
chown root:root /etc/cron.d/*
chmod 0644 /etc/cron.d/*

# Start cron; it's a daemon by default.
# -d 3 tells it to log to stderr, and to log levels 4 and up (default is
# only debug messages)
crond -d 3

# Add the site crontab
crontab /etc/cron.d/mwopnet

# Build the blog
if [ ! -f "data/posts.db" ] || [ ! -f "data/tag-cloud.phtml" ] || [ ! -f "data/search_terms.json" ];then
    composer build:blog
fi
/usr/bin/env php bin/mwop.net.php blog:clear-cache # really only necessary when running locally

# Build homepage assets
if [ ! -f "config/autoload/homepage.local.php" ] || [ ! -f "data/github-links.phtml" ];then
    composer build:homepage
fi

# Fetch initial Instagram feed
if [ ! -f "data/instagram.feed.php" ];then
    /usr/bin/env php bin/mwop.net.php instagram-feeds
fi

# Prepare initial comics
if [ ! -f "data/comics.phtml" ];then
    /usr/bin/env php ./vendor/bin/phly-comic.php fetch-all -p --output data/comics.phtml --exclude dilbert --exclude reptilis-rex --exclude nih
fi

# Start application; run in foreground, as that's what Docker prefers
/usr/bin/env php vendor/bin/zend-expressive-swoole start
